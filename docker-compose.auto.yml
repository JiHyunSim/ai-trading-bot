version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ai-trading-bot-postgres
    environment:
      POSTGRES_DB: trading_bot
      POSTGRES_USER: trading_bot
      POSTGRES_PASSWORD: ${DB_PASSWORD:-trading_bot_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_bot -d trading_bot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - trading-bot-network

  redis:
    image: redis:7-alpine
    container_name: ai-trading-bot-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-redis_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - trading-bot-network

  # Gateway Service
  gateway:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    container_name: ai-trading-bot-gateway
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - trading-bot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Collector Service
  collector:
    build:
      context: ./services/collector
      dockerfile: Dockerfile
    container_name: ai-trading-bot-collector
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - OKX_SANDBOX=true
      - DEFAULT_SYMBOL=BTC-USDT-SWAP
      - DEFAULT_TIMEFRAMES=5m,15m,1h,4h,1d
      - AUTO_START=true
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - trading-bot-network

  # Processor Service  
  processor:
    build:
      context: ./services/processor
      dockerfile: Dockerfile
    container_name: ai-trading-bot-processor
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=trading_bot
      - DB_USER=trading_bot
      - DB_PASSWORD=${DB_PASSWORD:-trading_bot_password}
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - trading-bot-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  trading-bot-network:
    driver: bridge